{{- if eq .Values.deploymentMode "Deployment" -}}
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ template "alertmanager.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "alertmanager.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.strategy }}
  strategy:
{{ toYaml .Values.strategy | indent 4 }}
  {{- end }}
  template:
    metadata:
    {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
    {{- end }}
      labels:
        app: {{ template "alertmanager.name" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ if .Values.rbac.create }}{{ template "alertmanager.fullname" . }}{{ else }}"{{ .Values.serviceAccountName }}"{{ end }}
      containers:
        - name: {{ template "alertmanager.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
            {{- range $key, $value := .Values.extraEnv }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
          args:
            - --config.file=/etc/config/alertmanager.yml
            - --storage.path={{ .Values.persistentVolume.mountPath }}
          {{- range $key, $value := .Values.extraArgs }}
            - --{{ $key }}={{ $value }}
          {{- end }}
          {{- if .Values.baseURL }}
            - --web.external-url={{ .Values.baseURL }}
          {{- end }}

          ports:
            - containerPort: 9093
          readinessProbe:
            httpGet:
              path: {{ .Values.prefixURL }}/#/status
              port: 9093
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: "{{ .Values.persistentVolume.mountPath }}"
              subPath: "{{ .Values.persistentVolume.subPath }}"

        - name: {{ template "alertmanager.name" . }}-{{ .Values.configmapReload.name }}
          image: "{{ .Values.configmapReload.image.repository }}:{{ .Values.configmapReload.image.tag }}"
          imagePullPolicy: "{{ .Values.configmapReload.image.pullPolicy }}"
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://localhost:9093{{ .Values.prefixURL }}/-/reload
          resources:
{{ toYaml .Values.configmapReload.resources | indent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ if .Values.configMapOverrideName }}{{ .Release.Name }}-{{ .Values.configMapOverrideName }}{{- else }}{{ template "alertmanager.fullname" . }}{{- end }}
        - name: storage-volume
        {{- if .Values.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistentVolume.existingClaim }}{{ .Values.persistentVolume.existingClaim }}{{- else }}{{ template "alertmanager.fullname" . }}{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end -}}
{{- end }}
